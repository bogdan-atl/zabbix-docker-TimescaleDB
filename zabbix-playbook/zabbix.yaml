---
- name: Установка Docker
  hosts: all
  become: true
  tasks:
    - name: Обновление списка пакетов
      apt:
        update_cache: yes

    - name: Установка необходимых пакетов
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
        state: present

    - name: Создание каталога /etc/apt/keyrings
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Загрузка GPG-ключа Docker
      shell: 'curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg'

    - name: Установка прав на файл docker.gpg
      file:
        path: /etc/apt/keyrings/docker.gpg
        mode: '0644'

    - name: Добавление репозитория Docker в /etc/apt/sources.list.d/docker.list
      shell: 'echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo $VERSION_CODENAME) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null'

    - name: Обновление списка пакетов после добавления Docker
      apt:
        update_cache: yes

    - name: Установка Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Загрузка последней версии Docker Compose
      get_url:
         url: https://github.com/docker/compose/releases/latest/download/docker-compose-Linux-x86_64
         dest: /usr/local/bin/docker-compose
         mode: '0755'
         timeout: 60
         force: yes

    - name: Установка Nginx
      apt:
        name: nginx
        state: present

    - name: Создание директории /etc/nginx/ssl
      file:
        path: /etc/nginx/ssl
        state: directory
        mode: '0755'

    - name: Генерация SSL-сертификатов
      shell: |
        openssl genrsa -out /etc/nginx/ssl/server.key 2048
        openssl req -new -key /etc/nginx/ssl/server.key -out /etc/nginx/ssl/server.csr -subj "/CN="
        openssl x509 -req -in /etc/nginx/ssl/server.csr -signkey /etc/nginx/ssl/server.key -out /etc/nginx/ssl/server.crt -days 365

    - name: Копирование конфигурационного файла Nginx
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/nginx.conf
        owner: root
        group: root
        mode: '0644'

    - name: Перезапуск сервиса Nginx
      systemd:
        name: nginx
        state: restarted

    - name: Установка apache2-utils
      apt:
       name: apache2-utils
       state: present

    - name: Создание файла .htpasswd
      shell: |
         htpasswd -b -c /etc/nginx/.htpasswd {{ nginx }} {{ pass }}
      args:
         executable: /bin/bash


    - name: Установка pptp-linux
      apt:
       name: pptp-linux
       state: present

    - name: Создание файла PPTP
      template:
        src: templates/PPTP.j2
        dest: /etc/ppp/peers/PPTP

    - name: Добавление маршрута в файл ip-up
      lineinfile:
        path: /etc/ppp/ip-up
        line: "sudo ip route add 192.168.0.0/24 via 100.255.255.1 dev ppp0"
        create: yes

    - name: Запуск PPTP соединения
      shell: pon PPTP

    - name: Клонирование репозитория
      git:
         repo: https://github.com/bogdan-atl/zabbix-docker-TimescaleDB.git
         dest: ~/zabbix-docker

    - name: Запуск Docker Compose
      command: docker-compose -f ~/zabbix-docker/docker-compose_v3_alpine_pgsql_latest.yaml up -d

    - name: Получить идентификаторы всех контейнеров
      shell: docker ps -aq
      register: all_container_ids
      changed_when: false

    - name: Получить идентификаторы контейнеров с образом "timescale/timescaledb-ha:pg14-latest"
      shell: docker ps -q --filter "ancestor=timescale/timescaledb-ha:pg14-latest"
      register: target_container_ids
      changed_when: false

    - name: Выключить все контейнеры, кроме указанных
      become: true
      shell: docker stop $(docker ps -q | grep -v "{{ target_container_ids.stdout }}")

    - name: Копировать файл zabbix_backup.dump
      copy:
       src: backup/zabbix_backupTSDB25052023.dump
       dest: ~/zabbix-docker/zabbix_backup.dump

    - name: Копирование в контейнер zabbix_backup.dump
      become: true
      shell: docker cp ~/zabbix-docker/zabbix_backup.dump {{ target_container_ids.stdout }}:/tmp/zabbix_backup.dump
      changed_when: false

    - name: Копирование файла конфигурации postgresql
      template:
        src: templates/comands.sql.j2
        dest: ~/zabbix-docker/comands.sql

    - name: Копирование в контейнер файл конфигурации
      become: true
      shell: docker cp ~/zabbix-docker/comands.sql {{ target_container_ids.stdout }}:/tmp/comands.sql
      changed_when: false

    - name: Подготовка Postgresql
      become: true
      shell: docker exec -i {{ target_container_ids.stdout }} psql -U zabbix -d postgres -f /tmp/comands.sql
      changed_when: false

    - name: ВОССТАНОВЛЕНИЕ
      become: true
      shell: docker exec -i {{ target_container_ids.stdout }} pg_restore -U zabbix -d zabbix -1 -v -Fc /tmp/zabbix_backup.dump
      changed_when: false

    - name: Подготовка базы Zabbix
      become: true
      shell: docker exec -i {{ target_container_ids.stdout }} psql -U zabbix -d postgres -c "SELECT timescaledb_post_restore();"
      changed_when: false

    - name: Изменение конфигурации Postgresql
      become: true
      shell: docker exec -i {{ target_container_ids.stdout }} sed -i 's/^max_connections =.*/max_connections = 150/' /home/postgres/pgdata/data/postgresql.conf
      changed_when: false

    - name: Перезапуск Docker Compose
      command: docker-compose -f ~/zabbix-docker/docker-compose_v3_alpine_pgsql_latest.yaml restart
